<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>200</y>
      <w>250</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*Canvas*
--
_fig
_ax
_automata
_generation
_cmap
_grid
--
_init()
_animate(i)
run_animation(generations, interval)
save(filename, generations=0)

layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>240</y>
      <w>290</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>matplotlib.colors.LinearSegmentedColormap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>200</y>
      <w>240</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>matplotlib.animation.FuncAnimation</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>210</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>250</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>290</y>
      <w>290</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>TwoDCellularAutomata</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>710</x>
      <y>300</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1060</x>
      <y>210</y>
      <w>210</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>coroutine to make
new Z data color map to 
be graphed by matplotlib.

To make the next generation:

next(self.generation)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>270</y>
      <w>230</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.
layer=3</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>730</x>
      <y>110</y>
      <w>340</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>eco = Canvas(automata)
eco.run_animation(generations=1000, interval=10)
eco.save('rule_30.mp4')
eco.save('rule_30.pdf)
eco.save('rule_30.pdf)
style=wordwrap
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1060</x>
      <y>360</y>
      <w>210</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>runs the automata's coroutine
'generations' number of times
creating a new picture each time

The video will show a picture
for 'interval' ms, before 
showing the next picture
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>990</x>
      <y>360</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.
layer=3</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
</diagram>
