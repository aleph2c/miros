<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>270</y>
      <w>420</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;400.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>180</x>
      <y>240</y>
      <w>160</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>*source_state*
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>730</x>
      <y>240</y>
      <w>180</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>*target_state*
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>340</x>
      <y>250</y>
      <w>530</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>SIGNAL_NAME(optional payload)[guard()]/action(),^EVT_A
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>210</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>260</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>140</y>
      <w>30</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>260</y>
      <w>60</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>40.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>570</x>
      <y>60</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Code which will
run during the
transition
(runs within the 
context of the source state)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>350</x>
      <y>190</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Trigger
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>500</x>
      <y>350</y>
      <w>170</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Guard:
An inline if statement
that must return
True for the transition
to run</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>710</x>
      <y>360</y>
      <w>220</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>Sent Events:
Shorthand for the posting
additional events while
the transition occurs.
Same as placing the 
following in your action code:

chart.post_fifo(
  Event(signal=signals.EVT_A))
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
