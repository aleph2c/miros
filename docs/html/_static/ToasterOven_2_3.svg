<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.0//EN'
          'http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd'>
<svg fill-opacity="1" xmlns:xlink="http://www.w3.org/1999/xlink" color-rendering="auto" color-interpolation="auto" text-rendering="auto" stroke="black" stroke-linecap="square" width="1180" stroke-miterlimit="10" shape-rendering="auto" stroke-opacity="1" fill="black" stroke-dasharray="none" font-weight="normal" stroke-width="1" viewBox="180 50 1180 820" height="820" xmlns="http://www.w3.org/2000/svg" font-family="'Dialog'" font-style="normal" stroke-linejoin="miter" font-size="12px" stroke-dashoffset="0" image-rendering="auto"
><!--Generated by the Batik Graphics2D SVG Generator--><defs id="genericDefs"
  /><g
  ><defs id="defs1"
    ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath1"
      ><path d="M0 0 L2147483647 0 L2147483647 2147483647 L0 2147483647 L0 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath2"
      ><path d="M0 0 L0 20 L20 20 L20 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath3"
      ><path d="M0 0 L0 180 L160 180 L160 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath4"
      ><path d="M0 0 L0 50 L200 50 L200 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath5"
      ><path d="M0 0 L0 40 L100 40 L100 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath6"
      ><path d="M0 0 L0 40 L40 40 L40 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath7"
      ><path d="M0 0 L0 80 L80 80 L80 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath8"
      ><path d="M0 0 L0 70 L70 70 L70 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath9"
      ><path d="M0 0 L0 90 L110 90 L110 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath10"
      ><path d="M0 0 L0 740 L30 740 L30 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath11"
      ><path d="M0 0 L0 160 L280 160 L280 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath12"
      ><path d="M0 0 L0 290 L290 290 L290 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath13"
      ><path d="M0 0 L0 210 L300 210 L300 0 Z"
      /></clipPath
      ><clipPath clipPathUnits="userSpaceOnUse" id="clipPath14"
      ><path d="M0 0 L0 160 L290 160 L290 0 Z"
      /></clipPath
    ></defs
    ><g fill="rgb(255,255,255)" fill-opacity="0.4902" transform="translate(1090,200)" stroke-opacity="0.4902" stroke="rgb(255,255,255)"
    ><circle r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75" stroke="none"
    /></g
    ><g transform="translate(1090,200)"
    ><circle fill="none" r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75"
    /></g
    ><g fill="rgb(255,255,255)" fill-opacity="0.4902" transform="translate(1030,200)" stroke-opacity="0.4902" stroke="rgb(255,255,255)"
    ><circle r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75" stroke="none"
    /></g
    ><g transform="translate(1030,200)"
    ><circle fill="none" r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75"
    /></g
    ><g fill="rgb(255,255,255)" fill-opacity="0.4902" transform="translate(1060,230)" stroke-opacity="0.4902" stroke="rgb(255,255,255)"
    ><circle r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75" stroke="none"
    /></g
    ><g transform="translate(1060,230)"
    ><circle fill="none" r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75"
    /></g
    ><g fill="rgb(255,255,255)" fill-opacity="0.4902" transform="translate(1120,230)" stroke-opacity="0.4902" stroke="rgb(255,255,255)"
    ><circle r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75" stroke="none"
    /></g
    ><g transform="translate(1120,230)"
    ><circle fill="none" r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75"
    /></g
    ><g fill="rgb(255,255,255)" fill-opacity="0.4902" transform="translate(1090,260)" stroke-opacity="0.4902" stroke="rgb(255,255,255)"
    ><circle r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75" stroke="none"
    /></g
    ><g transform="translate(1090,260)"
    ><circle fill="none" r="9.25" clip-path="url(#clipPath2)" cx="9.75" cy="9.75"
    /></g
    ><g fill="rgb(255,255,255)" fill-opacity="0" transform="translate(1010,120)" stroke-opacity="0" stroke="rgb(255,255,255)"
    ><path d="M0.5 0.5 L148.5 0.5 L159 12.5 L159 179 L0.5 179 Z" stroke="none" clip-path="url(#clipPath3)"
    /></g
    ><g transform="translate(1010,120)"
    ><path fill="none" d="M0.5 0.5 L148.5 0.5 L159 12.5 L159 179 L0.5 179 Z" clip-path="url(#clipPath3)"
      /><path fill="none" d="M148.5 0.5 L148.5 12.5 L159 12.5" clip-path="url(#clipPath3)"
      /><text x="5" font-size="14px" y="17.9688" clip-path="url(#clipPath3)" font-family="sans-serif" stroke="none" xml:space="preserve"
      >The state callbacks</text
      ><text x="5" font-size="14px" y="33.9375" clip-path="url(#clipPath3)" font-family="sans-serif" stroke="none" xml:space="preserve"
      >describe a</text
      ><text x="5" font-size="14px" y="49.9062" clip-path="url(#clipPath3)" font-family="sans-serif" stroke="none" xml:space="preserve"
      >directed acyclic graph</text
      ><text x="5" font-size="14px" y="65.875" clip-path="url(#clipPath3)" font-family="sans-serif" stroke="none" xml:space="preserve"
      >(DAG)</text
    ></g
    ><g fill="rgb(255,165,0)" fill-opacity="0.4902" transform="translate(1070,440)" stroke-opacity="0.4902" stroke="rgb(255,165,0)"
    ><rect x="0.5" width="198.5" height="48.5" y="0.5" clip-path="url(#clipPath4)" stroke="none"
      /><rect x="0.5" y="0.5" fill-opacity="1" clip-path="url(#clipPath4)" fill="none" width="198.5" height="48.5" stroke-opacity="1"
    /></g
    ><g fill="rgb(255,165,0)" fill-opacity="0.4902" transform="translate(800,740)" stroke-opacity="0.4902" stroke="rgb(255,165,0)"
    ><rect x="0.5" width="198.5" height="48.5" y="0.5" clip-path="url(#clipPath4)" stroke="none"
      /><rect x="0.5" y="0.5" fill-opacity="1" clip-path="url(#clipPath4)" fill="none" width="198.5" height="48.5" stroke-opacity="1"
    /></g
    ><g fill="rgb(255,165,0)" fill-opacity="0.4902" transform="translate(490,470)" stroke-opacity="0.4902" stroke="rgb(255,165,0)"
    ><rect x="0.5" width="198.5" height="48.5" y="0.5" clip-path="url(#clipPath4)" stroke="none"
      /><rect x="0.5" y="0.5" fill-opacity="1" clip-path="url(#clipPath4)" fill="none" width="198.5" height="48.5" stroke-opacity="1"
    /></g
    ><g fill="rgb(255,165,0)" fill-opacity="0.4902" transform="translate(700,250)" stroke-opacity="0.4902" stroke="rgb(255,165,0)"
    ><rect x="0.5" width="198.5" height="48.5" y="0.5" clip-path="url(#clipPath4)" stroke="none"
      /><rect x="0.5" y="0.5" fill-opacity="1" clip-path="url(#clipPath4)" fill="none" width="198.5" height="48.5" stroke-opacity="1"
    /></g
    ><g fill="rgb(255,165,0)" fill-opacity="0.4902" transform="translate(320,240)" stroke-opacity="0.4902" stroke="rgb(255,165,0)"
    ><rect x="0.5" width="198.5" height="48.5" y="0.5" clip-path="url(#clipPath4)" stroke="none"
      /><rect x="0.5" y="0.5" fill-opacity="1" clip-path="url(#clipPath4)" fill="none" width="198.5" height="48.5" stroke-opacity="1"
    /></g
    ><g font-family="sans-serif" font-size="14px" transform="translate(200,70)"
    ><text x="5" xml:space="preserve" y="17.9688" clip-path="url(#clipPath5)" stroke="none"
      >behavioral</text
      ><text x="5" xml:space="preserve" y="33.9375" clip-path="url(#clipPath5)" stroke="none"
      >complexity</text
    ></g
    ><g transform="translate(1040,210)"
    ><path fill="none" d="M10.5 10.5 L20.5 20.5" clip-path="url(#clipPath6)"
    /></g
    ><g transform="translate(1070,240)"
    ><path fill="none" d="M10.5 10.5 L20.5 20.5" clip-path="url(#clipPath6)"
    /></g
    ><g transform="translate(1070,210)"
    ><path fill="none" d="M10.5 20.5 L20.5 10.5" clip-path="url(#clipPath6)"
    /></g
    ><g transform="translate(1100,240)"
    ><path fill="none" d="M10.5 20.5 L20.5 10.5" clip-path="url(#clipPath6)"
    /></g
    ><g stroke-dasharray="8,5" stroke-miterlimit="5" transform="translate(430,280)" stroke-linecap="butt"
    ><path fill="none" d="M10.5 10.5 L60.5 60.5" clip-path="url(#clipPath7)"
    /></g
    ><g stroke-dasharray="8,5" stroke-miterlimit="5" transform="translate(650,300)" stroke-linecap="butt"
    ><path fill="none" d="M10.5 50.5 L50.5 10.5" clip-path="url(#clipPath8)"
    /></g
    ><g stroke-dasharray="8,5" stroke-miterlimit="5" transform="translate(700,480)" stroke-linecap="butt"
    ><path fill="none" d="M10.5 10.5 L90.5 70.5" clip-path="url(#clipPath9)"
    /></g
    ><g stroke-dasharray="8,5" stroke-miterlimit="5" transform="translate(1010,490)" stroke-linecap="butt"
    ><path fill="none" d="M10.5 60.5 L60.5 10.5" clip-path="url(#clipPath7)"
    /></g
    ><g transform="translate(230,110)"
    ><path fill="none" d="M10.5 720.5 L10.5 11.5" clip-path="url(#clipPath10)"
      /><path fill="none" d="M17 22.2583 L10.5 11 L4 22.2583" clip-path="url(#clipPath10)"
    /></g
    ><g font-family="sans-serif" font-size="14px" transform="translate(300,150)"
    ><text x="5" xml:space="preserve" y="17.9688" clip-path="url(#clipPath11)" stroke="none"
      >  def baking(oven, e):</text
      ><text x="5" xml:space="preserve" y="33.9375" clip-path="url(#clipPath11)" stroke="none"
      >    status = return_status.UNHANDLED</text
      ><text x="5" xml:space="preserve" y="49.9062" clip-path="url(#clipPath11)" stroke="none"
      >    if(e.signal == signals.ENTRY_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="65.875" clip-path="url(#clipPath11)" stroke="none"
      >      print("baking")</text
      ><text x="5" xml:space="preserve" y="81.8438" clip-path="url(#clipPath11)" stroke="none"
      >      status = return_status.HANDLED</text
      ><text x="5" xml:space="preserve" y="97.8125" clip-path="url(#clipPath11)" stroke="none"
      >    else:</text
      ><text x="5" xml:space="preserve" y="113.7812" clip-path="url(#clipPath11)" stroke="none"
      >      oven.temp.fun = heating</text
      ><text x="5" xml:space="preserve" y="129.75" clip-path="url(#clipPath11)" stroke="none"
      >      status = return_status.SUPER</text
      ><text x="5" xml:space="preserve" y="145.7188" clip-path="url(#clipPath11)" stroke="none"
      >    return status</text
    ></g
    ><g font-family="sans-serif" font-size="14px" transform="translate(680,160)"
    ><text x="5" xml:space="preserve" y="17.9688" clip-path="url(#clipPath11)" stroke="none"
      >  def toasting(oven, e):</text
      ><text x="5" xml:space="preserve" y="33.9375" clip-path="url(#clipPath11)" stroke="none"
      >    status = return_status.UNHANDLED</text
      ><text x="5" xml:space="preserve" y="49.9062" clip-path="url(#clipPath11)" stroke="none"
      >    if(e.signal == signals.ENTRY_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="65.875" clip-path="url(#clipPath11)" stroke="none"
      >      print("toasting")</text
      ><text x="5" xml:space="preserve" y="81.8438" clip-path="url(#clipPath11)" stroke="none"
      >      status = return_status.HANDLED</text
      ><text x="5" xml:space="preserve" y="97.8125" clip-path="url(#clipPath11)" stroke="none"
      >    else:</text
      ><text x="5" xml:space="preserve" y="113.7812" clip-path="url(#clipPath11)" stroke="none"
      >      oven.temp.fun = heating</text
      ><text x="5" xml:space="preserve" y="129.75" clip-path="url(#clipPath11)" stroke="none"
      >      status = return_status.SUPER</text
      ><text x="5" xml:space="preserve" y="145.7188" clip-path="url(#clipPath11)" stroke="none"
      >    return status</text
    ></g
    ><g font-family="sans-serif" font-size="14px" transform="translate(780,540)"
    ><text x="5" xml:space="preserve" y="17.9688" clip-path="url(#clipPath12)" stroke="none"
      >  def door_closed(oven, e):</text
      ><text x="5" xml:space="preserve" y="33.9375" clip-path="url(#clipPath12)" stroke="none"
      >    status = return_status.UNHANDLED</text
      ><text x="5" xml:space="preserve" y="49.9062" clip-path="url(#clipPath12)" stroke="none"
      >    if(e.signal == signals.ENTRY_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="65.875" clip-path="url(#clipPath12)" stroke="none"
      >      status = return_status.HANDLED</text
      ><text x="5" xml:space="preserve" y="81.8438" clip-path="url(#clipPath12)" stroke="none"
      >    elif(e.signal == signals.Baking):</text
      ><text x="5" xml:space="preserve" y="97.8125" clip-path="url(#clipPath12)" stroke="none"
      >      status = oven.trans(baking)</text
      ><text x="5" xml:space="preserve" y="113.7812" clip-path="url(#clipPath12)" stroke="none"
      >    elif(e.signal == signals.Toasting):</text
      ><text x="5" xml:space="preserve" y="129.75" clip-path="url(#clipPath12)" stroke="none"
      >      status = oven.trans(toasting)</text
      ><text x="5" xml:space="preserve" y="145.7188" clip-path="url(#clipPath12)" stroke="none"
      >		elif(e.signal == signals.INIT_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="161.6875" clip-path="url(#clipPath12)" stroke="none"
      >      status = oven.trans(off)</text
      ><text x="5" xml:space="preserve" y="177.6562" clip-path="url(#clipPath12)" stroke="none"
      >    elif(e.signal == signals.Off):</text
      ><text x="5" xml:space="preserve" y="193.625" clip-path="url(#clipPath12)" stroke="none"
      >      status = oven.trans(off)</text
      ><text x="5" xml:space="preserve" y="209.5938" clip-path="url(#clipPath12)" stroke="none"
      >    else:</text
      ><text x="5" xml:space="preserve" y="225.5625" clip-path="url(#clipPath12)" stroke="none"
      >      oven.temp.fun = oven.top</text
      ><text x="5" xml:space="preserve" y="241.5312" clip-path="url(#clipPath12)" stroke="none"
      >      status = return_status.SUPER</text
      ><text x="5" xml:space="preserve" y="257.5" clip-path="url(#clipPath12)" stroke="none"
      >    return status</text
    ></g
    ><g font-family="sans-serif" font-size="14px" transform="translate(470,340)"
    ><text x="5" xml:space="preserve" y="17.9688" clip-path="url(#clipPath13)" stroke="none"
      >  def heating(oven, e):</text
      ><text x="5" xml:space="preserve" y="33.9375" clip-path="url(#clipPath13)" stroke="none"
      >    status = return_status.UNHANDLED</text
      ><text x="5" xml:space="preserve" y="49.9062" clip-path="url(#clipPath13)" stroke="none"
      >    if(e.signal == signals.ENTRY_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="65.875" clip-path="url(#clipPath13)" stroke="none"
      >      oven.heater_on()</text
      ><text x="5" xml:space="preserve" y="81.8438" clip-path="url(#clipPath13)" stroke="none"
      >      status = return_status.HANDLED</text
      ><text x="5" xml:space="preserve" y="97.8125" clip-path="url(#clipPath13)" stroke="none"
      >    elif(e.signal == signals.EXIT_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="113.7812" clip-path="url(#clipPath13)" stroke="none"
      >      oven.heater_off()</text
      ><text x="5" xml:space="preserve" y="129.75" clip-path="url(#clipPath13)" stroke="none"
      >      status = return_status.HANDLED</text
      ><text x="5" xml:space="preserve" y="145.7188" clip-path="url(#clipPath13)" stroke="none"
      >    else:</text
      ><text x="5" xml:space="preserve" y="161.6875" clip-path="url(#clipPath13)" stroke="none"
      >      oven.temp.fun = door_closed</text
      ><text x="5" xml:space="preserve" y="177.6562" clip-path="url(#clipPath13)" stroke="none"
      >      status = return_status.SUPER</text
      ><text x="5" xml:space="preserve" y="193.625" clip-path="url(#clipPath13)" stroke="none"
      >    return status</text
    ></g
    ><g font-family="sans-serif" font-size="14px" transform="translate(1050,350)"
    ><text x="5" xml:space="preserve" y="17.9688" clip-path="url(#clipPath14)" stroke="none"
      >  def off(oven, e):</text
      ><text x="5" xml:space="preserve" y="33.9375" clip-path="url(#clipPath14)" stroke="none"
      >    status = return_status.UNHANDLED</text
      ><text x="5" xml:space="preserve" y="49.9062" clip-path="url(#clipPath14)" stroke="none"
      >    if(e.signal == signals.ENTRY_SIGNAL):</text
      ><text x="5" xml:space="preserve" y="65.875" clip-path="url(#clipPath14)" stroke="none"
      >      print("off")</text
      ><text x="5" xml:space="preserve" y="81.8438" clip-path="url(#clipPath14)" stroke="none"
      >      status = return_status.HANDLED</text
      ><text x="5" xml:space="preserve" y="97.8125" clip-path="url(#clipPath14)" stroke="none"
      >    else:</text
      ><text x="5" xml:space="preserve" y="113.7812" clip-path="url(#clipPath14)" stroke="none"
      >      oven.temp.fun = door_closed</text
      ><text x="5" xml:space="preserve" y="129.75" clip-path="url(#clipPath14)" stroke="none"
      >      status = return_status.SUPER</text
      ><text x="5" xml:space="preserve" y="145.7188" clip-path="url(#clipPath14)" stroke="none"
      >    return status</text
    ></g
  ></g
></svg
>
