<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>88</x>
      <y>40</y>
      <w>1072</w>
      <h>784</h>
    </coordinates>
    <panel_attributes>*Deceit_in_Detail_Tactic (marshaled)*
--
entry / 
  # Identify next marshal point
  # Load horse with arrows

Senior_Advance_War_Cry \ chart.post_fifo(Event(signal=signals.Advance_War_Cry))
Senior_Skirmish_War_Cry \ chart.post_fifo(Event(signal=signals.Skirmish_War_Cry))
Senior_Retreat_War_Cry \ chart.post_fifo(Event(signal=signals.Retreat_War_Cry))
valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>640</x>
      <y>88</y>
      <w>488</w>
      <h>376</h>
    </coordinates>
    <panel_attributes>*Skirmish*
--
entry /
  if archer.arrow &lt; 10:
    archer.post_fifo(
      Event(
        signal=signals.Ammunition_Low))

Officer_Lured /
  chart.post_fifo(Retreat_War_Cry)
  
Senior_Skirmish_War_Cry / {}
Other_Skirmish_War_Cry / {}


valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>280</x>
      <y>176</y>
      <w>328</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>*Advance*
--
entry /
  chart.post_fifo(
    Event(signal=signals.Close_Enough_for_Circle),
      times=1,
      period=3.0,
      deferred=True)

Senior_Advance_War_Cry / {}
Other_Advance_War_Cry / {}

valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>888</x>
      <y>144</y>
      <w>208</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>*Waiting to Lure*
--
entry /
  # Put away bow
  # Pull scimitar
  # Start Acting as Though Scared
  # Fake Goal Achievement
  
exit / 
  # Put away scimitar
  # Pull and arm bow




valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>728</x>
      <y>576</y>
      <w>272</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>*Feigned Retreat*
--
entry / 
  # Fire on officers
  # Fire on soldiers
  if archer.arrows == 0
    archer.post_fifo(
      Event(
        signal=signals.Out_Of_Arrow))

Retreat_War_Cry / {}
Other_Retreat_War_Cry / {}

valign=top
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>80</x>
      <y>240</y>
      <w>216</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


bg=blue
fg=blue</panel_attributes>
    <additional_attributes>10.0;20.0;250.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>632</x>
      <y>280</y>
      <w>272</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

fg=black</panel_attributes>
    <additional_attributes>10.0;20.0;320.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>184</x>
      <y>448</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>184</x>
      <y>448</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
fg=black</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>640</x>
      <y>264</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Ammunition_Low / 
chart.post_fifo(Retreat_Ready_War_Cry)
style=wordwrap
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>992</x>
      <y>632</y>
      <w>184</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

fg=blue</panel_attributes>
    <additional_attributes>210.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>120</x>
      <y>512</y>
      <w>496</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>*Marshal*
--
entry / 
  # Identify next marshal point (pick best ground)
  # Load horse with arrows
  # Field wrap wounds on self and horse
  # Drink water
  chart.post_fifo(
    Event(signal=signals.READY),
      times=1,
      period=3.0,
      deferred=True)


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>608</x>
      <y>648</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
Out_Of_Arrows
fg=black</panel_attributes>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>352</x>
      <y>328</y>
      <w>232</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*Circle and Fire*
--
entry /
  chart.post_fifo(
    Event(signal=signals.Skirmish_War_Cry),
    times=1,
    period=10,
    deferrred=True)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>440</y>
      <w>224</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
Close_Enough_For_Circle</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;40.0;260.0;40.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>632</x>
      <y>400</y>
      <w>272</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


fg=blue</panel_attributes>
    <additional_attributes>10.0;20.0;320.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>896</x>
      <y>336</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.Officer_Lured),
    times=1,
    period=random.randint(3,12),
    deferred=True)
style=wordwrap
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>984</x>
      <y>216</y>
      <w>104</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=.
fg=black</panel_attributes>
    <additional_attributes>60.0;10.0;110.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>384</x>
      <y>576</y>
      <w>200</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>*Waiting to Advance*
--
entry /
  mongol.post_fifo(
    Event(
      signal=signals.Advance_War_Cry),
    times=1,
    period=random.randint(3,12),
    deferred=True)

  

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>736</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


bg=blue</panel_attributes>
    <additional_attributes>10.0;70.0;320.0;70.0;320.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>456</y>
      <w>272</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


fg=blue</panel_attributes>
    <additional_attributes>320.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>88</x>
      <y>200</y>
      <w>176</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Advance_War_Cry as e /
  mongol.yell(e)
  for other in mongol.others:
    other.dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>912</x>
      <y>496</y>
      <w>176</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Skirmish_War_Cry /
  mongol.yell(Skirmish_War_Cry)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1000</x>
      <y>592</y>
      <w>176</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Retreat_War_Cry as e /
  archer.yell(e)
  for other in mongol.others
    other.dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>80</x>
      <y>344</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

  

bg=blue
fg=blue</panel_attributes>
    <additional_attributes>10.0;20.0;250.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>456</y>
      <w>480</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


fg=blue</panel_attributes>
    <additional_attributes>580.0;120.0;10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>704</x>
      <y>504</y>
      <w>176</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Other_Skirmish_War_Cry as e \
  for other in mongol.others:
    other.dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>992</x>
      <y>704</y>
      <w>184</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

fg=blue</panel_attributes>
    <additional_attributes>210.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1000</x>
      <y>672</y>
      <w>176</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Other_Retreat_War_Cry as e:
  for other in mongol.others
    other.dispatch(e)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>88</x>
      <y>312</y>
      <w>192</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Other_Advance_War_Cry as e: /
  for other in mongol.others:
    other.dispatch(e)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>640</x>
      <y>320</y>
      <w>256</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Retreat_Ready_War_Cry /
  ready = True
  for other in mongol.others:
    if other != 'Dead':
      ready &amp;= other.state_name == 'Not Waiting'
  if ready:
    mongol.post_fifo(Retreat_War_Cry)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>120</x>
      <y>696</y>
      <w>256</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Ready (Marshal Point) /
  ready = True
  for other in archer.others:
    if other != 'Dead':
      ready &amp;= other.state_name == 'Not Waiting'
  if ready:
    archer.post_fifo(Advance_War_Cry)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
