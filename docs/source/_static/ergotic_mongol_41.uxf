<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>208</x>
      <y>32</y>
      <w>1080</w>
      <h>784</h>
    </coordinates>
    <panel_attributes>*Deceit_in_Detail_Tactic (marshaled)*
--
entry / 
  # Identify next marshal point
  # Load horse with arrows

Senior_Advance_War_Cry \ chart.post_fifo(Event(signal=signals.Advance_War_Cry))
Senior_Skirmish_War_Cry \ chart.post_fifo(Event(signal=signals.Skirmish_War_Cry))
Senior_Retreat_War_Cry \ chart.post_fifo(Event(signal=signals.Retreat_War_Cry))
valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>768</x>
      <y>80</y>
      <w>488</w>
      <h>376</h>
    </coordinates>
    <panel_attributes>*Skirmish*
--
entry /
  if archer.arrow &lt; 10:
    archer.post_fifo(
      Event(
        signal=signals.Ammunition_Low))

Officer_Lured /
  chart.post_fifo(Retreat_War_Cry)
  
Senior_Skirmish_War_Cry / {}
Other_Skirmish_War_Cry / {}


valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>408</x>
      <y>168</y>
      <w>328</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>*Advance*
--
entry /
  chart.post_fifo(
    Event(signal=signals.Close_Enough_for_Circle),
      times=1,
      period=3.0,
      deferred=True)

Senior_Advance_War_Cry / {}
Other_Advance_War_Cry / {}

valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1016</x>
      <y>136</y>
      <w>208</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>*Waiting to Lure*
--
entry /
  # Put away bow
  # Pull scimitar
  # Start Acting as Though Scared
  # Fake Goal Achievement
  
exit / 
  # Put away scimitar
  # Pull and arm bow




valign=top

fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>856</x>
      <y>568</y>
      <w>224</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>*Feigned Retreat*
--
entry / 
  # Fire on officers
  # Fire on soldiers
  if archer.arrows == 0
    archer.post_fifo(
      Event(
        signal=signals.Out_Of_Arrow))

Retreat_War_Cry / {}
Other_Retreat_War_Cry / {}

valign=top
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>232</y>
      <w>224</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


bg=blue
fg=blue</panel_attributes>
    <additional_attributes>10.0;20.0;260.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>272</y>
      <w>272</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

fg=black</panel_attributes>
    <additional_attributes>10.0;20.0;320.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>312</x>
      <y>440</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>440</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
fg=black</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>768</x>
      <y>256</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Ammunition_Low / 
chart.post_fifo(Retreat_Ready_War_Cry)
style=wordwrap
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>624</y>
      <w>232</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

fg=blue</panel_attributes>
    <additional_attributes>270.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>248</x>
      <y>504</y>
      <w>496</w>
      <h>296</h>
    </coordinates>
    <panel_attributes>*Marshal*
--
entry / 
  # Identify next marshal point (pick best ground)
  # Load horse with arrows
  # Field wrap wounds on self and horse
  # Drink water
  chart.post_fifo(
    Event(signal=signals.READY),
      times=1,
      period=3.0,
      deferred=True)


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>736</x>
      <y>640</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
Out_Of_Arrows
fg=black</panel_attributes>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>480</x>
      <y>320</y>
      <w>232</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*Circle and Fire*
--
entry /
  chart.post_fifo(
    Event(signal=signals.Skirmish_War_Cry),
    times=1,
    period=10,
    deferrred=True)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>464</x>
      <y>432</y>
      <w>224</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
Close_Enough_For_Circle</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;40.0;260.0;40.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>392</y>
      <w>272</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


fg=blue</panel_attributes>
    <additional_attributes>10.0;20.0;320.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1024</x>
      <y>328</y>
      <w>200</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.Officer_Lured),
    times=1,
    period=random.randint(3,12),
    deferred=True)
style=wordwrap
fg=black</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>208</y>
      <w>104</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=.
fg=black</panel_attributes>
    <additional_attributes>60.0;10.0;110.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>512</x>
      <y>568</y>
      <w>200</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>*Waiting to Advance*
--
entry /
  mongol.post_fifo(
    Event(
      signal=signals.Advance_War_Cry),
    times=1,
    period=random.randint(3,12),
    deferred=True)

  

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>728</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


bg=blue</panel_attributes>
    <additional_attributes>10.0;70.0;320.0;70.0;320.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1032</x>
      <y>448</y>
      <w>272</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


fg=blue</panel_attributes>
    <additional_attributes>320.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>208</x>
      <y>192</y>
      <w>200</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Advance_War_Cry as e /
  mongol.yell(e)
  for ip, other in mongol.others.items():
    other.dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1040</x>
      <y>488</y>
      <w>176</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Skirmish_War_Cry /
  mongol.yell(Skirmish_War_Cry)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1088</x>
      <y>584</y>
      <w>200</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Retreat_War_Cry as e /
  archer.yell(e)
  for ip, other in mongol.others.items()
    other.dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>328</y>
      <w>224</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

  

bg=blue
fg=blue</panel_attributes>
    <additional_attributes>10.0;20.0;260.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>448</y>
      <w>480</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;


fg=blue</panel_attributes>
    <additional_attributes>580.0;120.0;10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>840</x>
      <y>512</y>
      <w>200</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Other_Skirmish_War_Cry as e, ip \
  mongol.other[ip].dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1072</x>
      <y>688</y>
      <w>232</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

fg=blue</panel_attributes>
    <additional_attributes>270.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1088</x>
      <y>672</y>
      <w>184</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Other_Retreat_War_Cry as e, ip:
  mongol.other[ip].dispatch(e)

style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>208</x>
      <y>312</y>
      <w>200</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Other_Advance_War_Cry as e, ip: /
  mongol.other[ip].dispatch(e)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>768</x>
      <y>312</y>
      <w>256</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Retreat_Ready_War_Cry /
  ready = True
  for ip, other in mongol.others.items():
    if other.state_name != 'Dead':
      ready &amp;= other.state_name == 'Waiting'
  if ready:
    mongol.post_fifo(Retreat_War_Cry)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>248</x>
      <y>688</y>
      <w>256</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Ready (Marshal Point) /
  ready = True
  for ip, other in archer.others.items():
    if other.state_name != 'Dead':
      ready &amp;= other.state_name == 'Waiting'
  if ready:
    archer.post_fifo(Advance_War_Cry)
style=wordwrap
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
